name: build
on:
  push:
    branches:
      - 'v[0-9]+.[0-9]+'
  
jobs:
  build_and_push:
    name: scan
    runs-on: ubuntu-20.04
    steps:
      - name: Check Commit Message
        run: |
            if [[ "${{ github.event.head_commit.message }}" == "#NORUN"* ]]; then
                echo "Commit message starts with #NORUN, skipping the workflow."
                exit 78  # Use a non-zero exit code to indicate skipping the workflow
            fi

      - name: Checkout code
        uses: actions/checkout@v3
        id: checkout1 #use for change and save

      - name: Run Trivy vulnerability scanner in repo mode
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          ignore-unfixed: true
          format: 'table'
          output: 'trivy-results.txt'
          severity: 'CRITICAL'  #add HIGH to give bug to get report 

      # - name: text file
      #   run: cat trivy-results.txt  #find what in this file
      
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: general
          SLACK_COLOR: ${{ job.status }} # or a specific color like 'good' or '#ff00ff'
          SLACK_ICON: https://github.com/rtCamp.png?size=48
          SLACK_MESSAGE: 'Name:Gu Xinran
                          Metriculation:A0285927L
                          Email:e1221739@u.nus.edu
                          Git:https://github.com/AshleyGu22/adlc3
                          Image:https://hub.docker.com/repository/docker/ashleygu22/go-fortune/general'
          SLACK_TITLE: Image build and signed
          SLACK_USERNAME: GuXinran
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

  
    #   - name: upload files
    #     uses: MeilCli/slack-upload-file@v3
    #     with:
    #       slack_token: ${{ secrets.SLACK_TOKEN }}
    #       channel_id: ${{ secrets.SLACK_CHANNEL_ID }}
    #       file_path: 'trivy-results.txt'
    #       file_type: 'text'
    #       file_name: 'trivy-results.txt'
    #       title: 'title of file'
    #       initial_comment: 'post by GuXinran'

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.1.1
    
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ashleygu22/go-fortune:abcd

      - name: Sign image with a key
        run: cosign sign --yes --key env://COSIGN_PRIVATE_KEY ashleygu22/go-fortune@sha256:610054bf91a6997a072887325ffe129c8711e8e00a5f9af5fb4a6a2223f6c243
        env:
          TAGS: ${{ steps.docker_meta.outputs.tags }}
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}