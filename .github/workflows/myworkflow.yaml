name: build
on:
  push:
    branches:
      - 'v[0-9]+.[0-9]+'
  
jobs:
  build:
    name: Build
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        id: checkout #use for change and save

      - name: Run Trivy vulnerability scanner in repo mode
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          ignore-unfixed: true
          format: 'table'
          output: 'trivy-results.txt'
          severity: 'CRITICAL'  #add HIGH to give bug to get report 

      # - name: text file
      #   run: cat trivy-results.txt  #find what in this file
      
      # - name: Slack Notification
      #   uses: rtCamp/action-slack-notify@v2
      #   env:
      #     SLACK_CHANNEL: general
      #     SLACK_COLOR: ${{ job.status }} # or a specific color like 'good' or '#ff00ff'
      #     SLACK_ICON: https://github.com/rtCamp.png?size=48
      #     SLACK_MESSAGE: 'Post Content :rocket:'
      #     SLACK_TITLE: Post Title
      #     SLACK_USERNAME: rtCamp
      #     SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

  
      # - name: upload files
      #   uses: MeilCli/slack-upload-file@v3
      #   with:
      #     slack_token: ${{ secrets.SLACK_TOKEN }}
      #     channel_id: ${{ secrets.SLACK_CHANNEL_ID }}
      #     file_path: 'trivy-results.txt'
      #     file_type: 'text'
      #     file_name: 'trivy-results.txt'
      #     title: 'title of file'
      #     initial_comment: 'post by Ashley'

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.1.1
    
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ashleygu22/go-fortune:abcd

      - name: Sign image with a key
        run: cosign sign --yes --key env://COSIGN_PRIVATE_KEY "${TAGS}@${DIGEST}"
        env:
          TAGS: ${{ steps.docker_meta.outputs.tags }}
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
                      

         
          
          
              
